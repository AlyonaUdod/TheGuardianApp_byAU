{"version":3,"sources":["redux/action/fetchAction.js","redux/api/api.js","redux/action/pageAction.js","New1/New1.jsx","App.js","redux/reducers/index.js","redux/reducers/fetchReducer.js","redux/reducers/errorReducer.js","redux/reducers/moreInfoReducer.js","redux/reducers/pageReduser.js","redux/store/store.js","serviceWorker.js","index.js"],"names":["fetchFirstNews","num","dispatch","axios","get","concat","getFirstNews","then","data","type","response","catch","fetchMoreAboutNew","url","getMoreAboutNew","addMoreInfoToStorage","content","blocks","body","plus","minus","currentNumber","New1","state","full","readFull","_this","setState","prev","getInfo","e","titleProps","props","clearMore","target","id","func","_this$props","this","indexOf","title","active","ur","newsUrl","react_default","a","createElement","Fragment","List","Item","Accordion","Title","index","onClick","className","Icon","name","Content","Segment","console","log","split","length","slice","join","Divider","href","rel","style","padding","Dimmer","inverted","Loader","Component","connect","App","activeIndex","handleClick","newIndex","getMoreInfo","refresh","clearStor","isNaN","getFirst","showNewPage","_callee","regenerator_default","wrap","_context","next","persist","currentNumberPage","text","page","plusPage","totalPages","minusPage","stop","_this2","news","error","moreInfo","Header","as","icon","Button","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","styled","undefined","map","el","src_New1_New1","key","webUrl","webTitle","apiUrl","results","bodyTextSummary","pages","total","pageNum","rootReducer","combineReducers","arguments","action","Object","objectSpread","DevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducers","compose","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2469d2f0.chunk.js","sourcesContent":["import { getFirstNews, getMoreAboutNew } from '../api/api'\n\n///////////////////////////////////////////////////////////////////////////////\n\n// First Fetch\n\nexport const fetchFirstNews = (num) => dispatch => {\n    return getFirstNews(num)\n    // .then(data => console.log(data))\n    .then(data => dispatch(addFirstNewsToStorage(data.data.response)))\n    .catch(() => dispatch(addErrorToStorage()))\n    // .catch(() => this.setState({ error: 'Sorry, we coudn\\'t find news for you. Try later, please.'}))\n}\nexport function addFirstNewsToStorage(response) {\n    return {\n        type: 'DOWNLOADED',\n        data: response,\n    }\n}\nexport function addErrorToStorage() {\n    return {\n        type: 'ERROR',\n    }\n}\nexport function clearStorage() {\n    return {\n        type: 'CLEAR_NEWS',\n    }\n}\nexport function addObjToStorage(response) {\n    return {\n        type: 'DOWN',\n        data: response,\n    }\n}\n\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////////\n\n// Get Info About New\n\nexport const fetchMoreAboutNew = (url) => dispatch => {\n    return getMoreAboutNew(url)\n    // .then(res => res.json())\n    // .then(data => console.log(data))\n    .then(data => dispatch(addMoreInfoToStorage(data.data.response.content.blocks.body[0])))\n    .catch(() => dispatch(addMoreInfoToStorage('Sorry, problem with connection, try later.')))\n}\nexport function addMoreInfoToStorage(data) {\n    return {\n        type: 'MORE',\n        data,\n    }\n}\nexport function clearMoreInfo() {\n    return {\n        type: 'CLEAR',\n    }\n}","import axios from 'axios';\r\n\r\nexport function getFirstNews(num) {\r\n    return (axios.get(`https://content.guardianapis.com/search?page=${num}&api-key=e925cc03-ba11-420b-b705-4b2997398056`))\r\n}\r\n\r\nexport function getMoreAboutNew(url) {\r\n    return (axios.get(`https://cors.io/?${url}?show-blocks=body&api-key=e925cc03-ba11-420b-b705-4b2997398056`))\r\n}","export const plus = (num) => {\r\n    return {\r\n        type: 'plus',\r\n        data: num,\r\n    }\r\n}\r\n\r\nexport const minus = (num) => ({\r\n        type: 'minus',\r\n        data: num,\r\n    })\r\n\r\n\r\nexport const currentNumber = (num) => ({\r\n        type: 'current',\r\n        data: num,\r\n})","import React, { Component } from 'react'\r\nimport { Accordion, Icon, List, Dimmer, Loader, Segment, Item, Divider } from 'semantic-ui-react'\r\nimport {connect} from 'react-redux'\r\nimport { clearMoreInfo } from '../redux/action/fetchAction'\r\n\r\nclass New1 extends Component {\r\n\r\n    state = {\r\n        full: false\r\n    }\r\n\r\n    readFull = () => {\r\n        this.setState(prev=> ({\r\n            full: !prev.full\r\n        }))\r\n    }\r\n\r\n    getInfo = (e, titleProps) => {\r\n        this.props.clearMore()\r\n        let url = e.target.id\r\n        this.props.func(e, titleProps, url)\r\n    }\r\n\r\n  render() {\r\n\r\n    const {body, indexOf, title, active, ur, newsUrl} = this.props\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <List.Item>\r\n                <Accordion.Title id={ur} active={active === indexOf} index={indexOf} onClick={this.getInfo} className='title'>\r\n                    <Icon name='dropdown' />\r\n                    {title}\r\n                </Accordion.Title>\r\n                <Accordion.Content active={active === indexOf} className='content-body'>\r\n                {body ?  \r\n                     <Segment onClick={() => (console.log('ggg'))}>\r\n                     {!this.state.full ? body.split(' ').length < 40 ? body : `${body.split(' ').slice(0,40).join(' ')}...` : body}\r\n                       <Item onClick={this.readFull}>\r\n                        <p className='news-link'>\r\n                            { body.split(' ').length < 40 ? '' : !this.state.full ? 'Read full news' : 'Hide full news'} \r\n                        </p>\r\n                       </Item>\r\n                       <Divider/>\r\n                       <Item>\r\n                        <a href={newsUrl} className='link' rel=\"noopener noreferrer\" target='_blank'>\r\n                           Read more on source\r\n                        </a>\r\n                       </Item>\r\n                     </Segment>           \r\n                    :\r\n                    <Segment style={{padding: '40px 0'}}>\r\n                        <Dimmer active inverted>\r\n                            <Loader inverted> Loading ...</Loader>\r\n                        </Dimmer>\r\n                    </Segment>\r\n                }   \r\n                </Accordion.Content>\r\n            </List.Item>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nfunction MDTP (dispatch) {\r\n    return {\r\n        clearMore: function() {\r\n          dispatch(clearMoreInfo())\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(null, MDTP) (New1) ","import React, { Component } from 'react'\nimport { connect} from 'react-redux'\nimport { fetchFirstNews, fetchMoreAboutNew, clearStorage} from './redux/action/fetchAction';\nimport { plus, minus, currentNumber} from './redux/action/pageAction'\nimport { Accordion, Header, Button, Dimmer, Loader, Segment, Pagination, Item } from 'semantic-ui-react'\nimport New1 from './New1/New1.jsx'\nimport './App.css'\n\n\nclass App extends Component {\n\n  state = { \n    activeIndex: -1,\n  }\n\n  handleClick = (e, titleProps, url) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index  \n    this.setState({ \n      activeIndex: newIndex }, this.props.getMoreInfo(url)\n      )\n  }\n\n  componentDidMount() {\n    this.props.getFirst(this.props.page)\n  }\n\n  refresh = (num) => {\n    this.props.clearStor()\n    if (!isNaN(num)) {\n       this.props.getFirst(num)\n    } else {\n      this.props.getFirst(1)\n    }\n   \n  }\n\n  showNewPage = async(e) => {\n    e.persist()\n    console.log(e.target)\n   if (e.target.type === 'pageItem'){\n     await this.props.currentNumberPage(+e.target.text)\n     this.refresh(this.props.page)\n   } else if (e.target.type === 'nextItem') {\n      await this.props.plusPage(this.props.totalPages)\n      this.refresh(this.props.page)\n   } else if (e.target.type === 'prevItem') {\n      await this.props.minusPage()\n      this.refresh(this.props.page)\n   }\n  }\n\n\n\n  render() {\n    const { activeIndex } = this.state\n    const {news, error, moreInfo, totalPages} = this.props\n\n    return (\n      <div className='wrapper'>\n        <div className='main-title'> \n          <Header as='h2' icon='bullhorn' content='The Guardian News'/>\n        </div>\n        <div className='main-button'> \n          <Button content='Refresh' icon='refresh' onClick={this.refresh}/>\n        </div>\n\n        <Pagination\n         defaultActivePage={1}\n         firstItem={null}\n         lastItem={null}\n         pointing\n         secondary\n         onClick={this.showNewPage}\n         totalPages={!totalPages ? 100 : 3500}\n        />\n       \n        <Accordion styled className='accordion-wrapper'>\n          { news === undefined && !error ? \n             <Segment style={{padding: '13.8rem 0'}}>\n                  <Dimmer active inverted>\n                      <Loader inverted> Loading ...</Loader>\n                  </Dimmer>\n              </Segment> : error ? <Item>{error} </Item> :\n          \n          error === '' ? news.map(el => <New1 key={el.webUrl} indexOf={news.indexOf(el)} active={activeIndex} func={this.handleClick} title={el.webTitle} ur={el.apiUrl} body={moreInfo} newsUrl={el.webUrl}/>) : \n          \n          <div className='error'>{error}</div>}\n        </Accordion>\n      </div>\n        \n    )\n  }\n}\n\nfunction MSTP (state) {\n  return {\n      news: state.news.results,\n      error: state.error,\n      moreInfo: state.moreInfo.bodyTextSummary,\n      page: state.page,\n      totalPages: state.news.pages,\n  }\n}\n\nfunction MDTP (dispatch) {\n  return {\n      getFirst: function(num) {\n        dispatch(fetchFirstNews(num))\n      },\n      getMoreInfo: function(url) {\n        dispatch(fetchMoreAboutNew(url))\n      },\n      clearStor: function(){\n        dispatch(clearStorage())\n      },\n      plusPage: function(total) {\n        dispatch(plus(total))\n      },\n      minusPage: function() {\n        dispatch(minus())\n      },\n      currentNumberPage: function(pageNum) {\n        dispatch(currentNumber(pageNum))\n      },\n  }\n}\n\nexport default connect( MSTP, MDTP)(App);\n","import { combineReducers } from 'redux';\r\n\r\nimport news from './fetchReducer'\r\nimport error from './errorReducer'\r\nimport moreInfo from './moreInfoReducer'\r\nimport page from './pageReduser'\r\n\r\nconst rootReducer = combineReducers({\r\n    news,\r\n    error,\r\n    moreInfo,\r\n    page,\r\n})\r\n\r\nexport default rootReducer;\r\n","export default function news (state={}, action) {\r\n    switch (action.type) {\r\n        case 'DOWNLOADED':\r\n            return {...action.data};\r\n        case 'CLEAR_NEWS':\r\n            return {}\r\n        default: \r\n            return state;\r\n    }\r\n}","export default function error (state='', action) {\r\n    switch (action.type) {\r\n        case 'ERROR':\r\n            return 'Sorry, we coudn\\'t find news for you. Try later, please.';\r\n        case 'CLEAR_NEWS':\r\n            return ''\r\n        default: \r\n            return state;\r\n    }\r\n}","export default function moreInfo (state={}, action) {\r\n    switch (action.type) {\r\n        case 'MORE':\r\n            return {...action.data};\r\n        case 'CLEAR':\r\n            return {};\r\n        default: \r\n            return state;\r\n    }\r\n}","export default function page (state = 1, action) {\r\n    switch (action.type) {\r\n        case 'plus' : \r\n            return state === action.data ? state : state + 1;\r\n        case 'minus' :\r\n            return state>1 ? state-1 : 1;\r\n        case 'current' :\r\n            return action.data;\r\n        default:\r\n            return state;  \r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducers from '../reducers/index';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducers, compose(applyMiddleware(thunk), DevTools));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store/store.js'\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>  \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}